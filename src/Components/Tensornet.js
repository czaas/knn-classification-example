import "regenerator-runtime/runtime";
import * as tf from "@tensorflow/tfjs-core";

export class Tensorset {
  static default = Tensorset;

  /**
   * Parse stringified version of Tensorset generated by `Tensorset.stringify`
   * @param {string} data - Stringified tensorset file generated with assistance of `Tensorset.stringify`
   * @example
   * const dataset = Tensorset.parse(data);
   * @returns { [label: string]: Tensor2D } Returns KNN Classifier readable dataset
   **/
  static parse(data) {
    return JSON.parse(data).reduce((dataset, { label, values, shape }) => {
      return {
        ...dataset,
        [label]: tf.tensor(values, shape),
      };
    }, {});
  }

  /**
   * Stringify Google's KNN Classifier `getClassifierDataset` method
   * @param {any} dataset - JSON parsed version of `Tensorset.parse`
   * @example
   * const data = await Tensorset.stringify(dataset);
   * @returns {Promise<string>} Returns stringified tensorset of KNN Classifier dataset
   **/
  static async stringify(dataset) {
    return JSON.stringify(
      await Promise.all(
        Object.entries(dataset).map(async ([label, value]) => {
          return {
            label,
            values: Array.from(await value.data()),
            shape: value.shape,
          };
        })
      )
    );
  }
}
